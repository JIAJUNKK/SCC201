DROP TABLE IF EXISTS ALBUM_SONGS;
DROP TABLE IF EXISTS ALBUM;
DROP TABLE IF EXISTS SONG;
DROP TABLE IF EXISTS CONTRACT;
DROP TABLE IF EXISTS ARTIST;
DROP TABLE IF EXISTS RECORD_LABEL;

CREATE TABLE IF NOT EXISTS ARTIST (
    ARTIST_ID VARCHAR(50) NOT NULL,
    ARTIST_NAME VARCHAR(50),
    ARTIST_DOB DATE,
    ARTIST_DEBUT_DATE DATE,
    PRIMARY KEY (ARTIST_ID)
);

CREATE TABLE IF NOT EXISTS SONG (
    SONG_ID INT NOT NULL AUTO_INCREMENT,
    ARTIST_ID VARCHAR(50) NOT NULL,
    SONG_NAME VARCHAR(50),
    SONG_LENGTH TIME,
    PRIMARY KEY (SONG_ID, ARTIST_ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST(ARTIST_ID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS ALBUM (
    ALBUM_ID INT NOT NULL,
    ARTIST_ID VARCHAR(50) NOT NULL,
    ALBUM_NAME VARCHAR(50),
    PUBLISH_DATE DATE,
    PRIMARY KEY (ALBUM_ID, ARTIST_ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST(ARTIST_ID) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS ALBUM_SONGS (
    ALBUM_ID INT NOT NULL,
    SONG_ID INT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (ALBUM_ID, SONG_ID),
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM(ALBUM_ID) ON DELETE RESTRICT,
    FOREIGN KEY (SONG_ID) REFERENCES SONG(SONG_ID) ON DELETE RESTRICT,
    UNIQUE (ALBUM_ID, SONG_ID)
);

CREATE TABLE IF NOT EXISTS RECORD_LABEL (
    RECORD_LABEL_ID VARCHAR(10) NOT NULL,
    RECORD_LABEL_NAME VARCHAR(50),
    PRIMARY KEY (RECORD_LABEL_ID)
);

CREATE TABLE IF NOT EXISTS CONTRACT (
    RECORD_LABEL_ID VARCHAR(10),
    ARTIST_ID VARCHAR(50),
    PRIMARY KEY (RECORD_LABEL_ID, ARTIST_ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST(ARTIST_ID) ON DELETE RESTRICT,
    FOREIGN KEY (RECORD_LABEL_ID) REFERENCES RECORD_LABEL(RECORD_LABEL_ID) ON DELETE RESTRICT
);

SELECT ARTIST_ID, ARTIST_NAME FROM ARTIST
WHERE ARTIST_ID IN (
  SELECT ARTIST_ID FROM SONG 
  GROUP BY ARTIST_ID 
  HAVING  AVG(TIME_TO_SEC(SONG_LENGTH)) > 180
);

SELECT ALBUM.ARTIST_ID, ARTIST.ARTIST_NAME, COUNT(*) AS ALBUM_NUMBER
FROM ALBUM, ARTIST
WHERE ALBUM.ARTIST_ID = ARTIST.ARTIST_ID
GROUP BY ALBUM.ARTIST_ID, ARTIST.ARTIST_NAME
HAVING COUNT(ALBUM.ARTIST_ID) > 6; 

SELECT C.RECORD_LABEL_ID, R.RECORD_LABEL_NAME, COUNT(C.ARTIST_ID) AS TOTAL_NUMBER_OF_ARTISTS
FROM CONTRACT C, RECORD_LABEL R
WHERE C.RECORD_LABEL_ID = R.RECORD_LABEL_ID
GROUP BY C.RECORD_LABEL_ID, R.RECORD_LABEL_NAME;


/*Deletion*/
DELETE FROM ARTIST A WHERE A.ARTIST_ID IN (
  SELECT ALBUM.ARTIST_ID
  FROM ALBUM
  GROUP BY ALBUM.ARTIST_ID
  HAVING COUNT(*) < 6
);

DELETE FROM ALBUM WHERE ALBUM.ALBUM_ID IN (
  SELECT (ALBUM_SONGS.ALBUM_ID) FROM SONG S, ALBUM_SONGS
  WHERE ALBUM_SONGS.SONG_ID = S.SONG_ID
  GROUP BY ALBUM_SONGS.ALBUM_ID
  HAVING AVG(TIME_TO_SEC(S.SONG_LENGTH)) < 180
);


SELECT a.ARTIST_ID, a.ARTIST_NAME FROM ARTIST a, SONG s
WHERE a.ARTIST_ID = s.ARTIST_ID
GROUP BY a.ARTIST_ID, a.ARTIST_NAME, s.ARTIST_ID
HAVING  AVG(TIME_TO_SEC(s.SONG_LENGTH)) > 180;

SELECT C.RECORD_LABEL_ID, R.RECORD_LABEL_NAME, COUNT(C.ARTIST_ID) AS TOTAL_NUMBER_OF_ARTISTS
FROM CONTRACT C, RECORD_LABEL R
WHERE C.RECORD_LABEL_ID = R.RECORD_LABEL_ID
GROUP BY C.RECORD_LABEL_ID, R.RECORD_LABEL_NAME;

